image: mxklb/docker-qt5-deb

stages:
- tests
- build
- deploy
- release

before_script:
- apt-get update -y
- apt-get install -y wget xvfb chrpath libfuse-dev

# Debug build (++ test coverage)
debug_tests:
  stage: tests
  script:
    - qmake cuteproject.pro -r CONFIG+=debug
    - make
    - gcovr -r . -e '.*extern.*' -e '.*moc_.*'
    - chmod +x lcov.sh && ./lcov.sh
    - mv coverage/*.pdf .
    - mv coverage/*.tar.gz .
  artifacts:
    paths:
      - coverage.pdf
      - coverage.tar.gz
    name: "test_coverage"

# Release build (++ tests)
release_tests:
  stage: tests
  script:
    - qmake cuteproject.pro -r CONFIG+=release
    - make

# Release build (no tests)
release_build:
  stage: build
  script:
    - echo "catchTests=false" > globals.pri
    - qmake cuteproject.pro -r CONFIG+=release
    - make

# Build & Deploy debian packages
.build_debian:
  stage: deploy
  only:
    - master
  script:
    - export USER=$GITLAB_USER_LOGIN
    - chmod +x pkgs/version.sh
    - chmod +x pkgs/debian.sh && pkgs/debian.sh
    - mv pkgs/deb/cuteproject-*.deb .
  artifacts:
    paths:
      - cuteproject-*.deb

debian_xenial:
  extends: .build_debian
  image: mxklb/docker-qt5-deb:xenial
  artifacts:
    name: "cuteproject-xenial_amd64"

debian_trusty:
  extends: .build_debian
  image: mxklb/docker-qt5-deb:trusty
  artifacts:
    name: "cuteproject-trusty_amd64"

# Build & Deploy .AppImage's
.build_appimage:
  stage: deploy
  image: mxklb/docker-qt5-deb:trusty
  script:
    - echo "catchTests=false" > globals.pri
    - qmake cuteproject.pro -r CONFIG+=release
    - make
    - chmod +x pkgs/version.sh
    - chmod +x pkgs/appimage.sh && pkgs/appimage.sh
    - mv pkgs/cuteproject-* .
  artifacts:
    paths:
      - cuteproject-*
    name: "cuteproject-x86_64"

appimage_latest:
  extends: .build_appimage
  only:
    - master

appimage_stable:
  extends: .build_appimage
  only:
    - tags
